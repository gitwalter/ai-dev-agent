---
alwaysApply: false
autoFix: false
category: docs-type_0
contexts:
- DOCUMENTATION
dependencies:
- core_values_enforcement_rule
description: Live Documentation Updates - type_0 layer rule
enforcement: warning
formalLayer: type_0
globs:
- '**/*'
languageGames:
- documentation_coordination
- knowledge_harmony
linguisticFramework: docs
logicalType: 0
priority: high
tags:
- type_0
- docs
- type_0
- priority_2
- documentation_coordination
- knowledge_harmony
tier: '2'
---

# Live Documentation Updates Rule

**CRITICAL**: All documentation must be updated immediately when any relevant changes occur. Documentation debt is not permitted.

## Description
This rule enforces real-time documentation updates whenever changes are made to code, architecture, processes, rules, configurations, or any other documented elements. Documentation must always reflect the current state of the system.

## Core Requirements

### 1. Immediate Update Obligation
**MANDATORY**: Update documentation within the same work session as the change
# Code example removed for brevity


### 2. Documentation Triggers
**MANDATORY**: Update documentation when ANY of these events occur:
# Code example removed for brevity


### 3. Documentation Types and Update Requirements
**MANDATORY**: Keep ALL documentation types current

#### Code Documentation
# Code example removed for brevity


#### API Documentation
# Code example removed for brevity
json
{
  "current_field": "string",
  "new_field": "integer"  // Added: 2024-01-15
}
# Code example removed for brevity
json
{
  "status": "success",
  "data": {
    "updated_structure": "current_format"
  }
}
# Code example removed for brevity


#### Architecture Documentation
# Code example removed for brevity
mermaid
graph TD
    A[Client] --> B[API Gateway]
    B --> C[Auth Service - Updated]
    B --> D[User Service - New]
# Code example removed for brevity


### 4. Documentation Standards
**MANDATORY**: Follow these update standards

#### Version Information
# Code example removed for brevity


#### Change Tracking
# Code example removed for brevity


### 5. Documentation Validation
**MANDATORY**: Validate documentation accuracy

#### Accuracy Verification
# Code example removed for brevity


#### Link Verification
# Code example removed for brevity


### 6. Automated Documentation Updates
**MANDATORY**: Implement automation where possible

#### Code Comment Extraction
# Code example removed for brevity


#### Schema Documentation
# Code example removed for brevity


### 7. Documentation Review Process
**MANDATORY**: Review documentation changes

#### Pre-Commit Validation
# Code example removed for brevity


#### Documentation Completeness Check
# Code example removed for brevity


### 8. Documentation Organization
**MANDATORY**: Maintain organized documentation structure

#### File Structure
# Code example removed for brevity


#### Cross-References
# Code example removed for brevity


### 9. Documentation Quality Standards
**MANDATORY**: Maintain high documentation quality

#### Clarity Requirements
# Code example removed for brevity
bash
   pip install python-oauth2 python-jwt
   # Code example removed for brevity
bash
   export OAUTH_CLIENT_ID="your_client_id"
   export OAUTH_CLIENT_SECRET="your_client_secret"
   # Code example removed for brevity
python
   from auth import OAuthHandler
   
   handler = OAuthHandler(
       client_id=os.getenv("OAUTH_CLIENT_ID"),
       client_secret=os.getenv("OAUTH_CLIENT_SECRET"),
       redirect_uri="http://localhost:8000/callback"  # New parameter
   )
   # Code example removed for brevity


#### Accuracy Requirements
# Code example removed for brevity


### 10. Documentation Metrics and Monitoring
**MANDATORY**: Track documentation health

#### Coverage Metrics
# Code example removed for brevity


#### Freshness Tracking
# Code example removed for brevity


### 11. Integration with Development Workflow
**MANDATORY**: Integrate documentation into development process

#### Pull Request Requirements
# Code example removed for brevity


#### CI/CD Integration
# Code example removed for brevity


### 12. Emergency Documentation Procedures
**MANDATORY**: Handle urgent documentation needs

#### Hotfix Documentation
# Code example removed for brevity


#### Documentation Debt Recovery
# Code example removed for brevity


### 1. Automated Enforcement
# Code example removed for brevity


### 2. Code Review Requirements
- [ ] All code changes have corresponding documentation updates
- [ ] Documentation accurately reflects implementation
- [ ] Examples work as written
- [ ] Links are valid and current
- [ ] Change history is updated

### 3. Quality Gates
- [ ] Documentation coverage ≥ 90%
- [ ] No documentation older than 30 days from related code
- [ ] All examples execute successfully
- [ ] No broken internal links
- [ ] Changelog updated with all changes

## Benefits

- **Improved Onboarding**: New team members have current documentation
- **Reduced Support Burden**: Accurate docs reduce questions
- **Better Maintenance**: Clear documentation aids debugging
- **Compliance**: Audit requirements met with current documentation
- **Knowledge Preservation**: Institutional knowledge captured and maintained

## Monitoring

### Success Metrics:
- Documentation coverage percentage
- Average documentation age relative to code
- Number of documentation-related support tickets
- Time to resolve documentation issues
- Developer satisfaction with documentation quality

### Failure Indicators:
- Documentation coverage below 90%
- Documentation older than 30 days from related code changes
- Broken or outdated examples
- Increasing support tickets about undocumented features
- Developer complaints about stale documentation

# Live Documentation Updates Rule

**CRITICAL**: All documentation must be updated immediately when any relevant changes occur. Documentation debt is not permitted.

## Description
This rule enforces real-time documentation updates whenever changes are made to code, architecture, processes, rules, configurations, or any other documented elements. Documentation must always reflect the current state of the system.

## Core Requirements

### 1. Immediate Update Obligation
**MANDATORY**: Update documentation within the same work session as the change
# Code example removed for brevity


### 2. Documentation Triggers
**MANDATORY**: Update documentation when ANY of these events occur:
# Code example removed for brevity


### 3. Documentation Types and Update Requirements
**MANDATORY**: Keep ALL documentation types current

#### Code Documentation
# Code example removed for brevity


#### API Documentation
# Code example removed for brevity
json
{
  "current_field": "string",
  "new_field": "integer"  // Added: 2024-01-15
}
# Code example removed for brevity
json
{
  "status": "success",
  "data": {
    "updated_structure": "current_format"
  }
}
# Code example removed for brevity


#### Architecture Documentation
# Code example removed for brevity
mermaid
graph TD
    A[Client] --> B[API Gateway]
    B --> C[Auth Service - Updated]
    B --> D[User Service - New]
# Code example removed for brevity


### 4. Documentation Standards
**MANDATORY**: Follow these update standards

#### Version Information
# Code example removed for brevity


#### Change Tracking
# Code example removed for brevity


### 5. Documentation Validation
**MANDATORY**: Validate documentation accuracy

#### Accuracy Verification
# Code example removed for brevity


#### Link Verification
# Code example removed for brevity


### 6. Automated Documentation Updates
**MANDATORY**: Implement automation where possible

#### Code Comment Extraction
# Code example removed for brevity


#### Schema Documentation
# Code example removed for brevity


### 7. Documentation Review Process
**MANDATORY**: Review documentation changes

#### Pre-Commit Validation
# Code example removed for brevity


#### Documentation Completeness Check
# Code example removed for brevity


### 8. Documentation Organization
**MANDATORY**: Maintain organized documentation structure

#### File Structure
# Code example removed for brevity


#### Cross-References
# Code example removed for brevity


### 9. Documentation Quality Standards
**MANDATORY**: Maintain high documentation quality

#### Clarity Requirements
# Code example removed for brevity
bash
   pip install python-oauth2 python-jwt
   # Code example removed for brevity
bash
   export OAUTH_CLIENT_ID="your_client_id"
   export OAUTH_CLIENT_SECRET="your_client_secret"
   # Code example removed for brevity
python
   from auth import OAuthHandler
   
   handler = OAuthHandler(
       client_id=os.getenv("OAUTH_CLIENT_ID"),
       client_secret=os.getenv("OAUTH_CLIENT_SECRET"),
       redirect_uri="http://localhost:8000/callback"  # New parameter
   )
   # Code example removed for brevity


#### Accuracy Requirements
# Code example removed for brevity


### 10. Documentation Metrics and Monitoring
**MANDATORY**: Track documentation health

#### Coverage Metrics
# Code example removed for brevity


#### Freshness Tracking
# Code example removed for brevity


### 11. Integration with Development Workflow
**MANDATORY**: Integrate documentation into development process

#### Pull Request Requirements
# Code example removed for brevity


#### CI/CD Integration
# Code example removed for brevity


### 12. Emergency Documentation Procedures
**MANDATORY**: Handle urgent documentation needs

#### Hotfix Documentation
# Code example removed for brevity


#### Documentation Debt Recovery
# Code example removed for brevity


### 1. Automated Enforcement
# Code example removed for brevity


### 2. Code Review Requirements
- [ ] All code changes have corresponding documentation updates
- [ ] Documentation accurately reflects implementation
- [ ] Examples work as written
- [ ] Links are valid and current
- [ ] Change history is updated

### 3. Quality Gates
- [ ] Documentation coverage ≥ 90%
- [ ] No documentation older than 30 days from related code
- [ ] All examples execute successfully
- [ ] No broken internal links
- [ ] Changelog updated with all changes

## Benefits

- **Improved Onboarding**: New team members have current documentation
- **Reduced Support Burden**: Accurate docs reduce questions
- **Better Maintenance**: Clear documentation aids debugging
- **Compliance**: Audit requirements met with current documentation
- **Knowledge Preservation**: Institutional knowledge captured and maintained

## Monitoring

### Success Metrics:
- Documentation coverage percentage
- Average documentation age relative to code
- Number of documentation-related support tickets
- Time to resolve documentation issues
- Developer satisfaction with documentation quality

### Failure Indicators:
- Documentation coverage below 90%
- Documentation older than 30 days from related code changes
- Broken or outdated examples
- Increasing support tickets about undocumented features
- Developer complaints about stale documentation

